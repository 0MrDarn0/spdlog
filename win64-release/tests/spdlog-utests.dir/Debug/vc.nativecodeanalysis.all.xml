<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>E:\devel\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>852</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v5::internal::decimal_formatter::write_pair</FUNCTION>
    <DECORATED>?write_pair@decimal_formatter@internal@v5@fmt@@AEAAXII@Z</DECORATED>
    <FUNCLINE>851</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>E:\devel\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2205</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'fmt::v5::system_error::error_code_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>fmt::v5::system_error::{ctor}</FUNCTION>
    <DECORATED>??0system_error@v5@fmt@@IEAA@XZ</DECORATED>
    <FUNCLINE>2205</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>fmt::v5::system_error::error_code_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>E:\devel\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>1353</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>6387</DEFECTCODE>
    <DESCRIPTION>'value' could be '0':  this does not adhere to the specification for the function 'std::_Narrow_char_traits&lt;char,int&gt;::length'. </DESCRIPTION>
    <FUNCTION>fmt::v5::internal::arg_formatter_base&lt;fmt::v5::back_insert_range&lt;fmt::v5::internal::basic_buffer&lt;char&gt; &gt; &gt;::write</FUNCTION>
    <DECORATED>?write@?$arg_formatter_base@V?$back_insert_range@V?$basic_buffer@D@internal@v5@fmt@@@v5@fmt@@@internal@v5@fmt@@IEAAXPEBD@Z</DECORATED>
    <FUNCLINE>1350</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>E:\devel\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
        <FILENAME>format.h</FILENAME>
        <LINE>1351</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'value' may be NULL (Enter this branch)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>E:\devel\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
        <FILENAME>format.h</FILENAME>
        <LINE>1352</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>E:\devel\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
        <FILENAME>format.h</FILENAME>
        <LINE>1353</LINE>
        <COLUMN>9</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'value' is an Input to 'std::_Narrow_char_traits&lt;char,int&gt;::length' (declared at c:\program files (x86)\microsoft visual studio\2019\community\vc\tools\msvc\14.22.27905\include\xstring:309)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>E:\devel\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
        <FILENAME>format.h</FILENAME>
        <LINE>1353</LINE>
        <COLUMN>9</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'value' should not be NULL, because this is not consistent with the SAL annotation on 'std::_Narrow_char_traits&lt;char,int&gt;::length'</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>E:\devel\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>1463</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>The function 'std::numeric_limits&lt;int&gt;::max' is constexpr, mark variable 'max_int' constexpr if compile-time evaluation is desired (con.5).</DESCRIPTION>
    <FUNCTION>fmt::v5::internal::parse_nonnegative_int</FUNCTION>
    <DECORATED>??$parse_nonnegative_int@DAEAU?$id_adapter@AEAU?$format_handler@V?$arg_formatter@V?$back_insert_range@V?$basic_buffer@D@internal@v5@fmt@@@v5@fmt@@@v5@fmt@@DV?$basic_format_context@V?$back_insert_iterator@V?$basic_buffer@D@internal@v5@fmt@@@std@@D@23@@v5@fmt@@D@internal@v5@fmt@@@internal@v5@fmt@@YAIAEAPEBDPEBDAEAU?$id_adapter@AEAU?$format_handler@V?$arg_formatter@V?$back_insert_range@V?$basic_buffer@D@internal@v5@fmt@@@v5@fmt@@@v5@fmt@@DV?$basic_format_context@V?$back_insert_iterator@V?$basic_buffer@D@internal@v5@fmt@@@std@@D@23@@v5@fmt@@D@012@@Z</DECORATED>
    <FUNCLINE>1454</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>E:\devel\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2386</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'fmt::v5::basic_writer&lt;fmt::v5::back_insert_range&lt;fmt::v5::internal::basic_buffer&lt;char&gt; &gt; &gt;::int_writer&lt;unsigned __int64,fmt::v5::basic_format_specs&lt;char&gt; &gt;::prefix' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>fmt::v5::basic_writer&lt;fmt::v5::back_insert_range&lt;fmt::v5::internal::basic_buffer&lt;char&gt; &gt; &gt;::int_writer&lt;unsigned __int64,fmt::v5::basic_format_specs&lt;char&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$int_writer@_KU?$basic_format_specs@D@v5@fmt@@@?$basic_writer@V?$back_insert_range@V?$basic_buffer@D@internal@v5@fmt@@@v5@fmt@@@v5@fmt@@QEAA@AEAV123@_KAEBU?$basic_format_specs@D@23@@Z</DECORATED>
    <FUNCLINE>2386</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>fmt::v5::basic_writer&lt;fmt::v5::back_insert_range&lt;fmt::v5::internal::basic_buffer&lt;char&gt; &gt; &gt;::int_writer&lt;unsigned __int64,fmt::v5::basic_format_specs&lt;char&gt; &gt;::prefix</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>E:\devel\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2511</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v5::basic_writer&lt;fmt::v5::back_insert_range&lt;fmt::v5::internal::basic_buffer&lt;char&gt; &gt; &gt;::inf_or_nan_writer::size</FUNCTION>
    <DECORATED>?size@inf_or_nan_writer@?$basic_writer@V?$back_insert_range@V?$basic_buffer@D@internal@v5@fmt@@@v5@fmt@@@v5@fmt@@QEBA_KXZ</DECORATED>
    <FUNCLINE>2510</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>E:\devel\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>core.h</FILENAME>
      <LINE>226</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'fmt::v5::internal::basic_buffer&lt;char&gt;::ptr_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>fmt::v5::internal::basic_buffer&lt;char&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$basic_buffer@D@internal@v5@fmt@@IEAA@_K@Z</DECORATED>
    <FUNCLINE>226</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>fmt::v5::internal::basic_buffer&lt;char&gt;::ptr_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>E:\devel\spdlog\tests\</FILEPATH>
      <FILENAME>test_registry.cpp</FILENAME>
      <LINE>9</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>____C_A_T_C_H____T_E_S_T____0</FUNCTION>
    <DECORATED>?____C_A_T_C_H____T_E_S_T____0@@YAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>E:\devel\spdlog\tests\</FILEPATH>
      <FILENAME>test_registry.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6237</DEFECTCODE>
    <DESCRIPTION>(&lt;zero&gt; &amp;&amp; &lt;expression&gt;) is always zero.  &lt;expression&gt; is never evaluated and might have side effects.</DESCRIPTION>
    <FUNCTION>____C_A_T_C_H____T_E_S_T____4::&lt;lambda_1d4a04d05e8d06f945928b20b12a8b6e&gt;::()</FUNCTION>
    <DECORATED>??R&lt;lambda_1d4a04d05e8d06f945928b20b12a8b6e&gt;@@QEBAXV?$shared_ptr@Vlogger@spdlog@@@std@@@Z</DECORATED>
    <FUNCLINE>42</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>E:\devel\spdlog\tests\</FILEPATH>
      <FILENAME>test_registry.cpp</FILENAME>
      <LINE>49</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>____C_A_T_C_H____T_E_S_T____6</FUNCTION>
    <DECORATED>?____C_A_T_C_H____T_E_S_T____6@@YAXXZ</DECORATED>
    <FUNCLINE>46</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>E:\devel\spdlog\tests\</FILEPATH>
      <FILENAME>test_registry.cpp</FILENAME>
      <LINE>66</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>____C_A_T_C_H____T_E_S_T____10</FUNCTION>
    <DECORATED>?____C_A_T_C_H____T_E_S_T____10@@YAXXZ</DECORATED>
    <FUNCLINE>62</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>E:\devel\spdlog\tests\</FILEPATH>
      <FILENAME>test_registry.cpp</FILENAME>
      <LINE>65</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>____C_A_T_C_H____T_E_S_T____10</FUNCTION>
    <DECORATED>?____C_A_T_C_H____T_E_S_T____10@@YAXXZ</DECORATED>
    <FUNCLINE>62</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>E:\devel\spdlog\tests\</FILEPATH>
      <FILENAME>test_registry.cpp</FILENAME>
      <LINE>76</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>____C_A_T_C_H____T_E_S_T____12</FUNCTION>
    <DECORATED>?____C_A_T_C_H____T_E_S_T____12@@YAXXZ</DECORATED>
    <FUNCLINE>73</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>E:\devel\spdlog\tests\</FILEPATH>
      <FILENAME>catch.hpp</FILENAME>
      <LINE>6172</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Catch::Detail::Approx::{ctor}</FUNCTION>
    <DECORATED>??0Approx@Detail@Catch@@QEAA@N@Z</DECORATED>
    <FUNCLINE>6171</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>E:\devel\spdlog\tests\</FILEPATH>
      <FILENAME>catch.hpp</FILENAME>
      <LINE>7931</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>Catch::clara::detail::Parser::parse</FUNCTION>
    <DECORATED>?parse@Parser@detail@clara@Catch@@UEBA?AV?$BasicResult@VParseState@detail@clara@Catch@@@234@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVTokenStream@234@@Z</DECORATED>
    <FUNCLINE>7914</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>E:\devel\spdlog\tests\</FILEPATH>
      <FILENAME>catch.hpp</FILENAME>
      <LINE>9899</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26439</DEFECTCODE>
    <DESCRIPTION>This kind of function may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Catch::ScopedMessage::{ctor}</FUNCTION>
    <DECORATED>??0ScopedMessage@Catch@@QEAA@$$QEAV01@@Z</DECORATED>
    <FUNCLINE>9899</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>E:\devel\spdlog\tests\</FILEPATH>
      <FILENAME>catch.hpp</FILENAME>
      <LINE>13370</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>Catch::prepareExpandedExpression</FUNCTION>
    <DECORATED>?prepareExpandedExpression@Catch@@YAXAEAVAssertionResult@1@@Z</DECORATED>
    <FUNCLINE>13369</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>E:\devel\spdlog\tests\</FILEPATH>
      <FILENAME>catch.hpp</FILENAME>
      <LINE>14092</LINE>
      <COLUMN>111</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Catch::ConsoleReporter::benchmarkStarting</FUNCTION>
    <DECORATED>?benchmarkStarting@ConsoleReporter@Catch@@UEAAXAEBUBenchmarkInfo@2@@Z</DECORATED>
    <FUNCLINE>14089</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>E:\devel\spdlog\tests\</FILEPATH>
      <FILENAME>catch.hpp</FILENAME>
      <LINE>5028</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Catch::Option&lt;unsigned __int64&gt;::storage' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Catch::Option&lt;unsigned __int64&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Option@_K@Catch@@QEAA@XZ</DECORATED>
    <FUNCLINE>5028</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Catch::Option&lt;unsigned __int64&gt;::storage</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>E:\devel\spdlog\tests\</FILEPATH>
      <FILENAME>catch.hpp</FILENAME>
      <LINE>7277</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Catch::clara::detail::ResultValueBase&lt;Catch::clara::detail::ParseState&gt;::&lt;unnamed-tag&gt;::m_value' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Catch::clara::detail::ResultValueBase&lt;Catch::clara::detail::ParseState&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$ResultValueBase@VParseState@detail@clara@Catch@@@detail@clara@Catch@@IEAA@AEBV0123@@Z</DECORATED>
    <FUNCLINE>7277</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Catch::clara::detail::ResultValueBase&lt;Catch::clara::detail::ParseState&gt;::&lt;unnamed-tag&gt;::m_value</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>E:\devel\spdlog\tests\</FILEPATH>
      <FILENAME>catch.hpp</FILENAME>
      <LINE>7275</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Catch::clara::detail::ResultValueBase&lt;Catch::clara::detail::ParseState&gt;::&lt;unnamed-tag&gt;::m_value' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Catch::clara::detail::ResultValueBase&lt;Catch::clara::detail::ParseState&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$ResultValueBase@VParseState@detail@clara@Catch@@@detail@clara@Catch@@IEAA@W4Type@ResultBase@123@@Z</DECORATED>
    <FUNCLINE>7275</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Catch::clara::detail::ResultValueBase&lt;Catch::clara::detail::ParseState&gt;::&lt;unnamed-tag&gt;::m_value</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>E:\devel\spdlog\tests\</FILEPATH>
      <FILENAME>catch.hpp</FILENAME>
      <LINE>7168</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Catch::clara::detail::Token::type' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Catch::clara::detail::Token::{ctor}</FUNCTION>
    <DECORATED>??0Token@detail@clara@Catch@@QEAA@XZ</DECORATED>
    <FUNCLINE>7168</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Catch::clara::detail::Token::type</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>E:\devel\spdlog\tests\</FILEPATH>
      <FILENAME>catch.hpp</FILENAME>
      <LINE>5145</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26439</DEFECTCODE>
    <DESCRIPTION>This kind of function may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Catch::AssertionStats::{ctor}</FUNCTION>
    <DECORATED>??0AssertionStats@Catch@@QEAA@$$QEAU01@@Z</DECORATED>
    <FUNCLINE>5145</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>